window = global;
var document = new Object();
var params = {
    location:{
        hash: "",
        host: "www.toutiao.com",
        hostname: "www.toutiao.com",
        href: "https://www.toutiao.com/",
        origin: "https://www.toutiao.com",
        pathname: "/",
        port: "",
        protocol: "https:",
        // search: "?_ijt=cbm25vhb9cva9uad3qdo901n7u"
    },
    navigator:{
        appCodeName: "Mozilla",
        appName: "Netscape",
        appVersion: "5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
        cookieEnabled: true,
        deviceMemory: 8,
        doNotTrack: null,
        hardwareConcurrency: 4,
        language: "zh-CN",
        languages: ["zh-CN", "zh"],
        maxTouchPoints: 0,
        onLine: true,
        platform: "Win32",
        product: "Gecko",
        productSub: "20030107",
        userAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36",
        vendor: "Google Inc.",
        vendorSub: "",
    }
};

Object.assign(window,params);
Object.assign(document,params);
document.cookie = "";

var _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(f) {
        return typeof f
    }
    : function(f) {
        return f && "function" == typeof Symbol && f.constructor === Symbol && f !== Symbol.prototype ? "symbol" : typeof f
    }
;
TAC = function() {
    function f(f, a, b, d, c, r) {
        null == r && (r = this);
        var n, i, o = {}, l = o.d = c ? c.d + 1 : 0;
        for (o["$" + l] = o,
                 i = 0; i < l; i++)
            o[n = "$" + i] = c[n];
        for (i = 0,
                 l = o.length = d.length; i < l; i++)
            o[i] = d[i];
        return e(f, a, b, o, r)[1]
    }
    function e(r, o, l, t, v, y) {
        function h(f) {
            S[++A] = f
        }
        function k() {
            return S[A--]
        }
        function m(f, e) {
            for (var a = b, d = "", c = 0; c < f.length; c++) {
                var r = f.charCodeAt(c);
                d += String.fromCharCode(a ^ r),
                    a = (a << 1) + c + e + 1 + (a >> 1) & 255
            }
            return d
        }
        null == v && (v = this);
        var g, C, x, I, S = [], A = 0;
        y && (g = y);
        for (var w = o + 2 * l; o < w; ) {
            var z = 13 * i(r, o) % 241;
            if (o += 2,
            0 == (3 & z))
                if (0 == (3 & (z >>= 2))) {
                    if (0 == (z >>= 2))
                        return [1, S[A--]];
                    if (2 == z)
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            I = oprand[1],
                            S[++A] = +I;
                    else if (4 == z)
                        g = S[A--],
                            S[A] = S[A] * g;
                    else if (6 == z)
                        g = S[A--],
                            S[A] = S[A] != g;
                    else if (13 == z)
                        C = S[A--],
                            x = S[A--],
                            (I = S[A--]).x === e ? S[++A] = f(r, I.pc, I.len, C, I.z, x) : S[++A] = I.apply(x, C);
                    else {
                        if (15 != z)
                            break;
                        oprand = n(r, o),
                            I = oprand[1],
                            S[A] = function(a, b) {
                                var d = function e() {
                                    var a = arguments;
                                    return f(r, e.pc, e.len, a, e.z, this)
                                };
                                return d.pc = a,
                                    d.len = b,
                                    d.x = e,
                                    d.z = t,
                                    d
                            }(o + 6, I - 4),
                            o += 2 * I - 2
                    }
                } else if (1 == (3 & z))
                    if (3 == (z >>= 2))
                        g = S[--A],
                            S[A] = g(S[A + 1]);
                    else if (5 == z)
                        S[A -= 1] = S[A][S[A + 1]];
                    else if (7 == z)
                        S[A] = --S[A];
                    else {
                        if (9 != z)
                            break;
                        g = S[A--],
                            S[A] = typeof g
                    }
                else if (2 == (3 & z))
                    if (6 == (z >>= 2))
                        S[A] = u(S[A]);
                    else if (8 == z)
                        g = S[A--],
                            oprand = n(r, o),
                            o += 2 * oprand[0],
                            S[A--][m(a[oprand[1]], oprand[1])] = g;
                    else {
                        if (10 != z) {
                            if (12 == z)
                                throw S[A--];
                            break
                        }
                        S[A] = ~S[A]
                    }
                else if (0 == (z >>= 2))
                    S[++A] = null;
                else if (2 == z)
                    g = S[A--],
                        S[A] = S[A] >= g;
                else if (9 == z)
                    g = k(),
                        C = k(),
                        t[0] = 65599 * t[0] + t[g].charCodeAt(C) >>> 0;
                else if (11 == z)
                    S[++A] = void 0;
                else {
                    if (13 != z)
                        break;
                    g = S[A--],
                        S[A] = S[A] && g
                }
            else if (1 == (3 & z))
                if (0 == (3 & (z >>= 2))) {
                    if (4 == (z >>= 2)) {
                        oprand = n(r, o),
                            I = oprand[1];
                        try {
                            if (d[c][2] = 1,
                            1 == (g = e(r, o + 6, I - 4, t, v))[0])
                                return g
                        } catch (y) {
                            if (d[c] && d[c][1] && 1 == (g = e(r, d[c][1][0], d[c][1][1], t, v, y))[0])
                                return g
                        } finally {
                            if (d[c] && d[c][0] && 1 == (g = e(r, d[c][0][0], d[c][0][1], t, v))[0])
                                return g;
                            d[c] = 0,
                                c--
                        }
                        o += 2 * I - 2
                    } else if (6 == z)
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            I = oprand[1],
                            S[A -= I] = p("x,y", "return new x[y](" + Array(I + 1).join(",x[++y]").substr(1) + ")")(S, A);
                    else if (8 == z)
                        g = S[A--],
                            S[A] = S[A] & g;
                    else if (10 != z)
                        break
                } else if (1 == (3 & z))
                    if (0 == (z >>= 2))
                        S[A] = !S[A];
                    else if (7 == z)
                        C = S[A--],
                            g = delete S[A--][C];
                    else if (9 == z)
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            S[A] = S[A][m(a[oprand[1]], oprand[1])];
                    else {
                        if (11 != z)
                            break;
                        g = S[A--],
                            S[A] = S[A] << g
                    }
                else if (2 == (3 & z))
                    if (1 == (z >>= 2))
                        S[++A] = g;
                    else if (3 == z)
                        g = S[A--],
                            S[A] = S[A] <= g;
                    else if (10 == z)
                        g = S[A -= 2][S[A + 1]] = S[A + 2],
                            A--;
                    else if (12 == z)
                        g = S[A],
                            S[++A] = g;
                    else {
                        if (14 != z)
                            break;
                        g = S[A--],
                            S[A] = S[A] || g
                    }
                else if (0 == (z >>= 2))
                    S[A] = !S[A];
                else if (2 == z)
                    oprand = n(r, o),
                        o += 2 * (I = oprand[1]) - 2;
                else if (4 == z)
                    g = S[A--],
                        S[A] = S[A] / g;
                else if (6 == z)
                    g = S[A--],
                        S[A] = S[A] !== g;
                else {
                    if (13 != z)
                        break;
                    S[++A] = v
                }
            else if (2 == (3 & z))
                if (0 == (3 & (z >>= 2)))
                    if (1 == (z >>= 2))
                        g = S[A--],
                            S[A] = S[A] > g;
                    else if (8 == z)
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            I = oprand[1],
                            C = A + 1,
                            S[A -= I - 1] = I ? S.slice(A, C) : [];
                    else if (10 == z)
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            I = oprand[1],
                            g = S[A--],
                            t[I] = g;
                    else {
                        if (12 != z)
                            break;
                        g = S[A--],
                            S[A] = S[A] >> g
                    }
                else if (1 == (3 & z))
                    if (0 == (z >>= 2))
                        S[++A] = s;
                    else if (2 == z)
                        g = S[A--],
                            S[A] = S[A] + g;
                    else if (4 == z)
                        g = S[A--],
                            S[A] = S[A] == g;
                    else if (11 == z)
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            I = oprand[1],
                            S[--A] = p("x,y", "return x " + m(a[I], I) + " y")(S[A], S[A + 1]);
                    else {
                        if (13 != z)
                            break;
                        g = S[A - 1],
                            C = S[A],
                            S[++A] = g,
                            S[++A] = C
                    }
                else if (2 == (3 & z))
                    if (1 == (z >>= 2))
                        oprand = n(r, o),
                            o += 2 * oprand[0],
                            S[++A] = m(a[oprand[1]], oprand[1]);
                    else if (3 == z)
                        S[A--] ? o += 6 : (oprand = n(r, o),
                            o += 2 * (I = oprand[1]) - 2);
                    else if (5 == z)
                        g = S[A--],
                            S[A] = S[A] % g;
                    else if (7 == z)
                        g = S[A--],
                            S[A] = S[A]instanceof g;
                    else {
                        if (14 != z)
                            break;
                        S[++A] = !1
                    }
                else if (4 == (z >>= 2))
                    oprand = n(r, o),
                        I = oprand[1],
                        d[c][0] && !d[c][2] ? d[c][1] = [o + 6, I - 4] : d[c++] = [0, [o + 6, I - 4], 0],
                        o += 2 * I - 2;
                else if (6 == z)
                    oprand = n(r, o),
                        o += 2 * oprand[0],
                        I = oprand[1],
                        S[++A] = t["$" + I];
                else {
                    if (8 != z)
                        break;
                    g = S[A--],
                        S[A] = S[A] | g
                }
            else if (0 == (3 & (z >>= 2)))
                if (1 == (z >>= 2))
                    oprand = n(r, o),
                        o += 2 * oprand[0],
                        I = oprand[1],
                        S[++A] = +m(a[I], I);
                else if (3 == z)
                    g = S[A--],
                        S[A] = S[A] - g;
                else if (5 == z)
                    g = S[A--],
                        S[A] = S[A] === g;
                else if (12 == z)
                    C = S[A--],
                        x = S[A--],
                        (I = S[A--]).x === e ? S[++A] = f(r, I.pc, I.len, C, I.z, x) : S[++A] = I.apply(x, C);
                else {
                    if (14 != z)
                        break;
                    g = S[A],
                        S[A] = S[A - 1],
                        S[A - 1] = g
                }
            else if (1 == (3 & z))
                if (2 == (z >>= 2))
                    h(function(f) {
                        var e = 0
                            , a = f.length;
                        return function() {
                            var b = e < a;
                            b && h(f[e++]),
                                h(b)
                        }
                    }(S[A]));
                else if (4 == z)
                    oprand = n(r, o),
                        o += 2 * oprand[0],
                        I = oprand[1],
                        g = t[I],
                        S[++A] = g;
                else if (6 == z)
                    S[A] = ++S[A];
                else {
                    if (8 != z)
                        break;
                    g = S[A--],
                        S[A] = S[A]in g
                }
            else if (2 == (3 & z))
                if (5 == (z >>= 2))
                    ;
                else if (7 == z)
                    g = S[A--];
                else if (9 == z)
                    g = S[A--],
                        S[A] = S[A] ^ g;
                else {
                    if (11 != z)
                        break;
                    oprand = n(r, o),
                        I = oprand[1],
                        d[++c] = [[o + 6, I - 4], 0, 0],
                        o += 2 * I - 2
                }
            else if (1 == (z >>= 2))
                g = S[A--],
                    S[A] = S[A] < g;
            else if (8 == z)
                oprand = n(r, o),
                    o += 2 * oprand[0],
                    I = oprand[1],
                    S[A] = S[A][I];
            else if (10 == z)
                S[++A] = !0;
            else {
                if (12 != z)
                    break;
                g = S[A--],
                    S[A] = S[A] >>> g
            }
        }
        return [0, null]
    }
    var a = []
        , b = 0
        , d = []
        , c = 0
        , r = function(f, e) {
            var a = "" + f[e++] + f[e];
            return parseInt(a, 16)
        }
        , n = function(f, e) {
            var a = f[e++]
                , b = f[e]
                , d = parseInt("" + a + b, 16);
            if (d >> 7 == 0)
                return d >> 6 != 0 && (d = -64 | 63 & d),
                    [1, d];
            if (d >> 6 == 2) {
                var c = parseInt("" + f[++e] + f[++e], 16);
                return 0 != (32 & d) ? d = -32 | 31 & d : d &= 31,
                    d <<= 8,
                    c = d + c,
                    [2, c]
            }
            if (d >> 6 == 3) {
                var r = parseInt("" + f[++e] + f[++e], 16)
                    , n = parseInt("" + f[++e] + f[++e], 16);
                return 0 != (32 & d) ? d = -32 | 31 & d : d &= 31,
                    d <<= 16,
                    r <<= 8,
                    n = d + r + n,
                    [3, n]
            }
        }
        , i = function(f, e) {
            var a = f[e++]
                , b = f[e];
            return parseInt("" + a + b, 16)
        }
        , o = function(f, e) {
            var a = "" + f[e++] + f[e];
            return a = parseInt(a, 16),
                String.fromCharCode(a)
        }
        , l = function(f, e, a) {
            for (var b = "", d = 0; d < a; d++)
                b += o(f, e),
                    e += 2;
            return b
        }
        , t = function(f, e, b) {
            for (var d = 0; d < b; d++) {
                var c = n(f, e);
                e += 2 * c[0];
                var r = l(f, e, c[1]);
                a.push(r),
                    e += 2 * c[1]
            }
        }
        , s = this
        , p = s.Function
        , u = Object.keys || function(f) {
            var e = {}
                , a = 0;
            for (var b in f)
                e[a++] = b;
            return e.length = a,
                e
        }
    ;
    return function(e) {
        e.length;
        for (var d = 0, c = "", i = d; i < d + 16; )
            c += o(e, i),
                i += 2;
        if ("HNOJ@?RC" != c)
            throw new Error("error magic number " + c);
        n(e, d += 16);
        d += 8,
            b = 0;
        for (var l = 0; l < 4; l++) {
            var s = r(e, d + 2 * l);
            b += (3 & s) << 2 * l
        }
        d += 16;
        var p = n(e, d += 16)
            , u = p[1]
            , v = d += 2 * p[0];
        d += p[1];
        var y = n(e, d);
        y[1];
        d += 2 * y[0],
            a = [],
            t(e, d, y[1]),
            f(e, v, u, [])
    }
}(),
    TAC("", []);



function get_sign(uu) {
    sign = window.byted_acrawler.sign({url:uu});
    return sign
}
		//此处是与Python代码交互的，下面那行去掉，只是测试用的
// sign = window.byted_acrawler.sign({url:"https://www.toutiao.com/api/pc/feed/?max_behot_time=1611556965&category=__all__&utm_source=toutiao&widen=1&tadrequire=true"});
// console.log(sign);

const express = require('express');
const bodyParser = require('body-parser');
// 创建应用实例
const app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));
app.post('/get_sign', function (req, res) {
    let sign = get_sign(req.body["url"])
    res.json(
        {
            sign: sign
        }
    )
});
// 监听8000端口并在运行成功后向控制台输入服务器启动成功！
const server = app.listen(8000, function () {
    let host = server.address().address;
    let port = server.address().port;
    console.log(
        "node服务启动，监听地址为: http://%s:%s", host, port
    )
});